version: '3.9'

services:
  # === Core Dependencies ===

  postgres:
    image: postgres:13
    container_name: local-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: devdb
    ports:
      - '5432:5432'
    volumes:
      - pg-data:/var/lib/postgresql/data

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: local-dynamodb
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb
    ports:
      - '8000:8000'

  minio:
    image: minio/minio:latest
    container_name: local-minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
    volumes:
      - minio-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: local-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # === Application Services ===

  # api-gateway:
  #   build:
  #     context: ../api-gateway
  #     dockerfile: Dockerfile
  #   container_name: api-gateway
  #   ports:
  #     - '4000:4000'
  #   env_file:
  #     - ../.env
  #   environment:
  #     # override or supplement .env as needed:
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USER: ${POSTGRES_USER}
  #     DB_PASS: ${POSTGRES_PASSWORD}
  #     DB_NAME: ${POSTGRES_DB}
  #     DYNAMODB_ENDPOINT: http://dynamodb-local:8000
  #     S3_ENDPOINT: http://minio:9000
  #     RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
  #   depends_on:
  #     - postgres
  #     - dynamodb-local
  #     - minio
  #     - rabbitmq

  # bg-ingest:
  #   build:
  #     context: ../services/bg-ingest
  #     dockerfile: Dockerfile
  #   container_name: bg-ingest
  #   ports:
  #     - '5001:5001'
  #   env_file:
  #     - ../.env.dev   # Dexcom sandbox credentials, dev overrides
  #   environment:
  #     DYNAMODB_ENDPOINT: http://dynamodb-local:8000
  #   depends_on:
  #     - dynamodb-local

  # food-recognize:
  #   build:
  #     context: ../services/food-recognize
  #     dockerfile: Dockerfile
  #   container_name: food-recognize
  #   ports:
  #     - '5002:5002'
  #   env_file:
  #     - ../.env
  #   environment:
  #     S3_ENDPOINT: http://minio:9000
  #   depends_on:
  #     - minio

  # activity-sync:
  #   build:
  #     context: ../services/activity-sync
  #     dockerfile: Dockerfile
  #   container_name: activity-sync
  #   ports:
  #     - '5003:5003'
  #   env_file:
  #     - ../.env
  #   environment:
  #     DYNAMODB_ENDPOINT: http://dynamodb-local:8000
  #   depends_on:
  #     - dynamodb-local

  # web-ui:
  #   build:
  #     context: ../web-ui
  #     dockerfile: Dockerfile
  #   container_name: web-ui
  #   ports:
  #     - '3000:3000'
  #   env_file:
  #     - ../.env
  #   environment:
  #     REACT_APP_API_URL: http://localhost:4000
  #   depends_on:
  #     - api-gateway

volumes:
  pg-data:
  minio-data:
